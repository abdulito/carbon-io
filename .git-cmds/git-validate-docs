#!/usr/bin/env python

from __future__ import (
    division,
    unicode_literals,
    print_function,
    absolute_import
)

import gitcmdutils.version_utils as version_utils
import argparse
import logging
import sys

def main():
    parser = \
        argparse.ArgumentParser(description='update carbon-io docs submodules')
    
    parser.add_argument('-v', '--verbose', action='store_true',
                        help='log debug output')

    opts = parser.parse_args(sys.argv[1:])

    logging.basicConfig(level=logging.DEBUG if opts.verbose else logging.WARN)

    out_of_date_submodules = version_utils.get_out_of_date_submodules()
    
    if len(out_of_date_submodules) > 0:
        # FAIL
        logging.info("\n\nResults:\n")
        for submodule in out_of_date_submodules:
            logging.info("submodule: %s is out of date!!" % submodule['path'])

    return 0


if __name__ == '__main__':
    sys.exit(main())

